<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:macro name="gazebo_grey" params="ref">
        <gazebo reference="${ref}">
            <material>Gazebo/Grey</material>
        </gazebo>
    </xacro:macro>






    <xacro:macro name="gazebo_frictionless" params="ref">
        <gazebo reference="${ref}">
            <material>Gazebo/Grey</material>
            <mu>0.0</mu>
            <mu2>0.0</mu2>
        </gazebo>
    </xacro:macro>

    <xacro:gazebo_frictionless ref="frictionless_back_left" />
    <xacro:gazebo_frictionless ref="frictionless_back_right" />
    <xacro:gazebo_frictionless ref="frictionless_right_left" />
    <xacro:gazebo_frictionless ref="frictionless_right_right" />







    <xacro:macro name="gazebo_withfriction" params="ref">
        <gazebo reference="${ref}">
            <material>Gazebo/DarkGrey</material>
            <mu>${infobot_friction}</mu>
            <mu2>${infobot_friction}</mu2>
            <slip1>${infobot_slip}</slip1>
            <slip2>${infobot_slip}</slip2>
        </gazebo>
    </xacro:macro>

    <xacro:gazebo_withfriction ref="wheel_left_link" />
    <xacro:gazebo_withfriction ref="wheel_right_link" />






    <gazebo reference="base_link">
        <material>Gazebo/Orange</material>
    </gazebo>

    <gazebo reference="imu_link">
      <sensor name="infobot_imu_sensor" type="imu">
          <always_on>true</always_on>
          <update_rate>10</update_rate>
          <imu>
            <angular_velocity>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </z>
            </angular_velocity>
            <linear_acceleration>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </z>
            </linear_acceleration>
          </imu>
          <plugin name="infobot_imu" filename="libgazebo_ros_imu_sensor.so">
            <ros>
              <!-- <namespace>/infobot</namespace> -->
              <remapping>~/out:=imu</remapping>
            </ros>
          </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="base_scan">
      <sensor name="hls_lfcd_lds" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>0 0 0.6 0 0 0</pose>
        <update_rate>2</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.2</min>
            <max>50</max>
            <resolution>1</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.00</stddev>
          </noise>
        </ray>
        <plugin name="infobot_laserscan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <!-- <namespace>/infobot</namespace> -->
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan</frame_name>
        </plugin>
      </sensor>
    </gazebo>

    <gazebo reference="camera_rgb_frame">
        <sensor name="camera" type="camera">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <camera name="intel_realsense_r200">
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
          <plugin name="camera_driver" filename="libgazebo_ros_camera.so">
            <ros>
              <!-- <namespace>test_cam</namespace> -->
              <!-- <remapping>image_raw:=image_demo</remapping> -->
              <!-- <remapping>camera_info:=camera_info_demo</remapping> -->
            </ros>
            <!-- camera_name>omit so it defaults to sensor name</camera_name-->
            <!-- frame_name>omit so it defaults to link name</frameName-->
            <!-- <hack_baseline>0.07</hack_baseline> -->
          </plugin>
      </sensor>
    </gazebo>

    <gazebo>
    <plugin name="infobot_diff_drive" filename="libgazebo_ros_diff_drive.so">

      <ros>
        <!-- <namespace>/infobot</namespace> -->
      </ros>

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>${wheel_separation}</wheel_separation>
      <wheel_diameter>${wheel_radius*2}</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>

    <plugin name="infobot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <!-- <namespace>/infobot</namespace> -->
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin>


    </gazebo>


</robot>