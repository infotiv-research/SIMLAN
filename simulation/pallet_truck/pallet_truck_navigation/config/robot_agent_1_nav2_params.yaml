robot_agent_1:
  behavior_server:
    ros__parameters:
      robot_base_frame: "robot_agent_1/base_link"
      odom_frame: robot_agent_1_odom

  bt_navigator:
    ros__parameters:
      default_nav_to_pose_bt_xml: "/home/ros/src/simulation/pallet_truck/pallet_truck_navigation/config/navigate_w_replanning_and_recovery.xml"
      default_nav_through_poses_bt_xml: "/home/ros/src/simulation/pallet_truck/pallet_truck_navigation/config/navigate_through_poses_w_replanning_and_recovery.xml"
      robot_base_frame: "robot_agent_1/base_link"
      plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_rate_controller_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node

      navigate_to_pose:
        plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
        enable_groot_monitoring: false
        groot_server_port: 1667


      navigate_through_poses:
        plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"
        enable_groot_monitoring: false
        groot_server_port: 1669

      # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
      # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
      # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
      # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.

      # plugin_lib_names is used to add custom BT plugins to the executor (vector of strings).
      # Built-in plugins are added automatically
      # plugin_lib_names: []

      error_code_name_prefixes:
        - assisted_teleop
        - backup
        - compute_path
        - dock_robot
        - drive_on_heading
        - follow_path
        - nav_thru_poses
        - nav_to_pose
        - route
        - spin
        - undock_robot
        - wait


  bt_navigator_rclcpp_node:
    ros__parameters:
      use_sim_time: true

  controller_server:
    ros__parameters:
      robot_base_frame: robot_agent_1/base_link
      odom_frame: robot_agent_1_odom
      global_frame: map        
      map_topic: /map         
      use_sim_time: true
      debug_trajectory_details: true
      controller_plugins: ["FollowPath"]
      FollowPath:
        plugin: "dwb_core::DWBLocalPlanner"
        min_vel_x: -0.4
        min_vel_y: 0.0
        max_vel_x: 3.26
        max_vel_y: 0.0
        max_vel_theta: 1.5
        min_speed_xy: 0.0
        max_speed_xy: 3.26
        min_speed_theta: 0.0
        min_x_velocity_threshold: 0.001
        # Add high threshold velocity for turtlebot 3 issue.
        # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
        min_y_velocity_threshold: 0.5
        min_theta_velocity_threshold: 0.001
        acc_lim_x: 2.5
        acc_lim_y: 0.0
        acc_lim_theta: 3.2
        decel_lim_x: -2.5
        decel_lim_y: 0.0
        decel_lim_theta: -3.2
        vx_samples: 20
        vy_samples: 5
        vtheta_samples: 20
        sim_time: 1.7
        linear_granularity: 0.05
        xy_goal_tolerance: 0.25
        transform_tolerance: 0.2
        critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
        BaseObstacle.scale: 0.02
        PathAlign.scale: 0.0
        GoalAlign.scale: 0.0
        PathDist.scale: 32.0
        GoalDist.scale: 24.0
        RotateToGoal.scale: 32.0

  controller_server_rclcpp_node:
    ros__parameters:
      use_sim_time: true

  local_costmap:
    local_costmap:
      ros__parameters:
        update_frequency: 5.0
        publish_frequency: 2.0
        global_frame: map
        map_topic: /map
        robot_base_frame: robot_agent_1/base_link
        odom_frame: robot_agent_1_odom
        use_sim_time: true
        plugin_names: ["obstacle_layer", "voxel_layer", "inflation_layer"]
        plugin_types: ["nav2_costmap_2d::ObstacleLayer", "nav2_costmap_2d::VoxelLayer", "nav2_costmap_2d::InflationLayer"]
        rolling_window: true
        width: 10
        height: 10
        resolution: 0.05
        robot_radius: 0.22
        inflation_layer:
          cost_scaling_factor: 2.0
          inflation_radius: 0.55
        obstacle_layer:
          enabled: true
          observation_sources: scan
          scan:
            topic: /scan
            max_obstacle_height: 2.0
            clearing: true
            marking: true
            data_type: "LaserScan"
        voxel_layer:
          enabled: true
          publish_voxel_map: true
          origin_z: 0.0
          z_resolution: 0.2
          z_voxels: 10
          max_obstacle_height: 2.0
          mark_threshold: 0
          observation_sources: pointcloud
          pointcloud:
            topic: /intel_realsense_r200_depth/points
            max_obstacle_height: 2.0
            clearing: true
            marking: true
            data_type: "PointCloud2"
        static_layer:
          map_topic: /map        
          map_subscribe_transient_local: true
        always_send_full_costmap: true
    local_costmap_client:
      ros__parameters:
        use_sim_time: true
    local_costmap_rclcpp_node:
      ros__parameters:
        use_sim_time: true

  global_costmap:
    global_costmap:
      ros__parameters:
        update_frequency: 1.0
        publish_frequency: 1.0
        global_frame: robot_agent_1/base_link
        robot_base_frame: robot_agent_1/base_link
        odom_frame: robot_agent_1_odom

        use_sim_time: true
        plugin_names: ["static_layer", "obstacle_layer", "voxel_layer", "inflation_layer"]
        plugin_types: ["nav2_costmap_2d::StaticLayer", "nav2_costmap_2d::ObstacleLayer", "nav2_costmap_2d::VoxelLayer", "nav2_costmap_2d::InflationLayer"]
        robot_radius: 0.22
        
        inflation_layer:
          cost_scaling_factor: 2.0
          inflation_radius: 0.55
        obstacle_layer:
          enabled: true
          observation_sources: scan
          scan:
            topic: /scan
            max_obstacle_height: 2.0
            clearing: true
            marking: true
            data_type: "LaserScan"
        voxel_layer:
          enabled: true
          publish_voxel_map: true
          origin_z: 0.0
          z_resolution: 0.2
          z_voxels: 10
          max_obstacle_height: 2.0
          mark_threshold: 0
          observation_sources: pointcloud
          pointcloud:
            topic: /intel_realsense_r200_depth/points
            max_obstacle_height: 2.0
            clearing: true
            marking: true
            data_type: "PointCloud2"
        static_layer:
          map_topic: /map         
          map_subscribe_transient_local: true
        always_send_full_costmap: true
    global_costmap_client:
      ros__parameters:
        use_sim_time: true
    global_costmap_rclcpp_node:
      ros__parameters:
        use_sim_time: true

  planner_server:
    ros__parameters:
      planner_plugins: ["GridBased"]  # example plugin name
      odom_frame: robot_agent_1_odom
      GridBased:
        plugin: "nav2_navfn_planner/NavfnPlanner"  # actual plugin class name

  planner_server_rclcpp_node:
    ros__parameters:
      use_sim_time: true
